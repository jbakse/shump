#Basic Requirements

-	Title Screen
	-	Instructions
	-	Start

-	Game Play
	-	Level
		+-	start loading level from Tiled level editor
		+-	load tiles
		+-	clean up tile loader
		-	clean up tile loader more, make arbitray background counts with data loaded paralax distances
		-	merge tile geometry: http://learningthreejs.com/blog/2011/10/05/performance-merging-geometry/

	-	Overall Structure/Factor
		- Improve, especially for Game/Level classes

	-	Collsion Interface
		+-	Formalize functions for providing bounding box, hitTarget(), takeHit()....

	-	Player
		+-	Move
		+-	Shoot
		-	Die when hit
		-	Life counter
		-	0 live, game over

	-	Backgrounds
		+- background
		+- far background(paralax)
		
	-	Enemies
		-	Need three kinds
		+-	Move
		+-	Shoot
		+-	Die when hit
		-	Better factor weapons/bullets

	-	Bullet
		- is there  a cleaner way to override the model on the EnemyBullet? Maybe by making material a property rather than private?
		- maybe just make an abstract bullet that doesn't have a model, and make bullet and enemy bullet extend and skin
		
	-	Boss
		-	 Multi hits to kill
		-	 Display health?
		-	 Dies
		
	-	Bullets
		+-	Move
		+-	Kill when hit other team
	
	-	Explosions
		+- particles
		- use particle pool

	-	Score
		+-	track
		+-	show
	
	-	Asset Loading
		-	look at existing batch loading js conventions
		-	want texture loader, sound loader, model loaders
		-	want centralized loading progress manager that can track all of the different asset types
		-	smart preloading
		-	start when assets are ready!
		-	show progress

	-	Sound
		- music
		+- fx
		- fx post processing (echo effect maybe?)

	-	Post FX
		+-	Quick and Dirty
		-	Factor Post FX out to own class

	+-	Full Screen

-	Game Over Screen
	-	Return to Title Screen on Keypress   


-	Graphics
-	Music
-	Sound FX


